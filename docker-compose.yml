services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        volumes:
            - .:/var/www
            - ./docker/php/conf.d/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - sheba_network
        depends_on:
            - db
            - redis
        command: php artisan octane:start --server=swoole --host=0.0.0.0 --port=8000 --workers=16 --task-workers=8
        deploy:
            replicas: 4

    caddy:
        image: caddy:2-alpine
        container_name: sheba_caddy
        volumes:
            - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
        ports:
            - "8090:80"
            - "8443:443"
        networks:
            - sheba_network
        depends_on:
            - app
        restart: unless-stopped


    db:
        image: mysql:8.0
        container_name: sheba_db
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-sheba}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
            MYSQL_PASSWORD: ${DB_PASSWORD:-root}
            MYSQL_USER: ${DB_USERNAME:-sheba}
        volumes:
            - db_data:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        ports:
            - "3307:3306"
        networks:
            - sheba_network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7-alpine
        container_name: sheba_redis
        command: redis-server --maxmemory 2gb --maxmemory-policy allkeys-lru
        ports:
            - "6380:6379"
        networks:
            - sheba_network
        volumes:
            - redis_data:/data

    queue:
        image: sheba-transfer-system-app
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./wait-for-it.sh:/var/www/wait-for-it.sh
        networks:
            - sheba_network
        depends_on:
            - app
            - db
            - redis

        command: ["./wait-for-it.sh", "-t", "60", "db:3306", "--", "php", "artisan", "queue:work", "redis", "--queue=transfers", "--tries=3", "--backoff=3", "--max-jobs=1000", "--sleep=1"]
        deploy:
            replicas: 4

networks:
    sheba_network:
        driver: bridge

volumes:
    db_data:
    redis_data:
    caddy_data:
    caddy_config:
